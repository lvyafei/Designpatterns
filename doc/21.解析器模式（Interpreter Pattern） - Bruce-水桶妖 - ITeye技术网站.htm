<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN" dir="ltr">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>21.解析器模式（Interpreter Pattern） - Bruce-水桶妖 - ITeye技术网站</title>
    <meta name="description" content="1.定义  给定一门语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中句子。  属于行为类模式。     2.解释器模式的使用场景  重复发生的问题可以使用解释器模式：比如根据用户输入的公式进行加减乘除四则运算，但是他们输入的公式每次都不同，有时是a+b-c*d，有时是a*b+c-d，等等等等个，公式千变万化，但是都是由加减乘除四个非终结符来连接的，这时我们就可以使用解释 ..." />
    <meta name="keywords" content="解析器模式, Interpreter Pattern 21.解析器模式（Interpreter Pattern）" />
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
    <link rel="search" type="application/opensearchdescription+xml" href="/open_search.xml" title="ITeye" />
    <link href="/rss" rel="alternate" title="Bruce-水桶妖" type="application/rss+xml" />
    <link href="http://www.iteye.com/stylesheets/blog.css?1406686577" media="screen" rel="stylesheet" type="text/css" />
<link href="http://www.iteye.com/stylesheets/themes/blog/orange.css?1326191326" media="screen" rel="stylesheet" type="text/css" />
    <script src="http://www.iteye.com/javascripts/application.js?1358214518" type="text/javascript"></script>
    <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535605-1']);
  _gaq.push(['_setDomainName', 'iteye.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>


      <link href="http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953" media="screen" rel="stylesheet" type="text/css" />
  <script src="http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1325907333" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/hotkey.js?1324994303" type="text/javascript"></script>
  <script src="http://www.iteye.com/javascripts/code_favorites.js?1358214518" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/weiboshare.js?1324994303" type="text/javascript"></script>
  </head>
  <body>
    <div id="header">
      <div id="blog_site_nav">
  <a href="http://www.iteye.com/" class="homepage">首页</a>
  <a href="http://www.iteye.com/news">资讯</a>
  <a href="http://www.iteye.com/magazines">精华</a>
  <a href="http://www.iteye.com/forums">论坛</a>
  <a href="http://www.iteye.com/ask">问答</a>
  <a href="http://www.iteye.com/blogs">博客</a>
  <a href="http://www.iteye.com/blogs/subjects">专栏</a>
  <a href="http://www.iteye.com/groups">群组</a>
  <a href="#" onclick="return false;" id="msna"><u>更多</u> <small>▼</small></a>
  <div class="quick_menu" style="display:none;">
    <a target="_blank" href="http://job.iteye.com/iteye">招聘</a>
    <a href="http://www.iteye.com/search">搜索</a>
  </div>
</div>

      <div id="user_nav">
      <a href="/login" class="welcome" title="登录">您还未登录 !</a>
    <a href="/login">登录</a>
    <a href="/signup" class="nobg">注册</a>
  </div>

    </div>

    <div id="page">
      <div id="branding" class="clearfix">
        <div id="blog_name">
          <h1><a href="/">Bruce-水桶妖</a></h1>
        </div>
        <div id='fd'></div>
        <div id="blog_navbar">
          <ul>
            <li class='blog_navbar_for'><a href="http://wangwengcn.iteye.com"><strong>博客</strong></a></li>
            <li ><a href="/weibo">微博</a></li>
            <li ><a href="/album">相册</a></li>
            <li ><a href="/link">收藏</a></li>
            <li ><a href="/blog/guest_book">留言</a></li>
            <li ><a href="/blog/profile">关于我</a></li>
          </ul>
    
          <div class="search">
            <form action="/blog/search" method="get">
              <input class="search_text" id="query" name="query" style="margin-left: 10px;width: 110px;" type="text" value="" />
              <input class="submit_search" type="submit" value="" />
            </form>
          </div> 
          <div id="fd"></div>         
        </div>
      </div>
      
      <div id="content" class="clearfix">
        <div id="main">
          



          


<div class="h-entry" style='display:none'>
  <a href="http://wangwengcn.iteye.com" class="p-author" target="_blank">wangwengcn</a>
</div>


<div class="blog_main">
  <div class="blog_title">
    <h3>
      <a href="/blog/1733971">21.解析器模式（Interpreter Pattern）</a>
      <em class="actions">      </em>
    </h3>
    <ul class='blog_categories'><strong>博客分类：</strong> <li><a href="/category/251011">DesignPattern</a></li> </ul>
        <div class='news_tag'><a href="http://www.iteye.com/blogs/tag/%E8%A7%A3%E6%9E%90%E5%99%A8%E6%A8%A1%E5%BC%8F">解析器模式</a><a href="http://www.iteye.com/blogs/tag/Interpreter%20Pattern">Interpreter Pattern</a>&nbsp;</div>
  </div>

  <div id="blog_content" class="blog_content">
    <p>1.定义</p>
<p style="padding-left: 30px;">给定一门语言，定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中句子。<br>
属于行为类模式。</p>
<p style="padding-left: 30px;"> </p>
<p>2.解释器模式的使用场景</p>
<ul>
<li>重复发生的问题可以使用解释器模式：比如根据用户输入的公式进行加减乘除四则运算，但是他们输入的公式每次都不同，有时是a+b-c*d，有时是a*b+c-d，等等等等个，公式千变万化，但是都是由加减乘除四个非终结符来连接的，这时我们就可以使用解释器模式。</li>
<li>一个简单语法需要解释的场景：你看看下面给出的例子，非终结表达式，文法规则越多，复杂度越高，而且类间还要进行递归调用。因此解释器模式一般用来解析比较标准的字符集，例如sql语法分析，不过该部分逐渐被专用工具所取代。</li>
</ul>
<p style="padding-left: 30px;">在实际开发工作中经常会有客户要求计算公式他们自己制定，我们只要按照他们的公式和提供的数据进行运算就行了，那么这个业务逻辑也就不能写死了。<br>
下面让我们工具加减乘除四则运算的例子来看看何谓解释器模式（四则比较麻烦，例子只写加减操作）：</p>
<p style="padding-left: 30px;"> </p>
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;

/**
 * 抽象表达式
 */
public abstract class Expression {
	
	/**
	 * 解析公式和数值，其中var中的key是公式的参数，value值是具体的数字
	 * 负责对传递进来的参数和值进行解析和匹配，其中key是表达式a+b+c中的a、b、c，value是运算时取得的值
	 */
	// 如果是终结符表达式，那么此方法将获取参数的值
	// 如果是非终结符表达式，那么此方法将进行运算，比如加减
	public abstract int interpreter(HashMap&lt;String, Integer&gt; var);
}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;

/**
 * 变量解析器
 * 终结符表达式
 */
public class VarExpression extends Expression {
	
	private String key;

	public VarExpression(String key) 
	{
		this.key = key;
	}

	// 从map中取得值
	@Override
	public int interpreter(HashMap&lt;String, Integer&gt; var) {
		return var.get(key);
	}

}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

/**
 * 抽象运算符解析器
 * 非终结符表达式
 */
public abstract class SymbolExpression extends Expression {
	
	// 每个运算符都有左右两个参数进行运算，因此抽象到父类中
	protected Expression left;
	protected Expression right;

	public SymbolExpression(Expression left, Expression right)
	{
		this.left = left;
		this.right = right;
	}

}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;

/**
 * 加法解析器
 * interpreter方法处理加法运算
 */
public class AddExpression extends SymbolExpression {

	public AddExpression(Expression left, Expression right) {
		super(left, right);
	}

	// 进行加法运算
	@Override
	public int interpreter(HashMap&lt;String, Integer&gt; var) {
		return super.left.interpreter(var) + super.right.interpreter(var);
	}

}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;

/**
 * 减法解析器
 * interpreter方法处理减法运算
 */
public class SubExpression extends SymbolExpression {

	public SubExpression(Expression left, Expression right) {
		super(left, right);
	}

	// 进行减法运算
	@Override
	public int interpreter(HashMap&lt;String, Integer&gt; var) {
		return super.left.interpreter(var) - super.right.interpreter(var);
	}

}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;
import java.util.Stack;

/**
 * 对输入的表达式进行解析，并计算
 */
public class Context {

	// 定义表达式，最后拿到是一个运算解析器，比如X+Y格式的，其中X可能又是由A+B的运算解析器组成
	// 只有最底层的解析器才是变量解析器，也就是终结符表达式
	// 此参数最终得到的肯定是非终结表达式
	private Expression expression;
	
	/**
	 * 分析用户输入的表达式
	 */
	public void analyse(String expStr) {
		// 定义一个栈，安排运算的先后顺序
		Stack&lt;Expression&gt; stack = new Stack&lt;Expression&gt;();
		char[] charArray = expStr.toCharArray();
		Expression left = null;
		Expression right = null;
		for(int i=0; i&lt;charArray.length; i++)
		{
			switch(charArray[i])
			{
			case '+':
				// 将加法运算加入到栈中
				left = stack.pop();
				right = new VarExpression(String.valueOf(charArray[++i]));
				stack.push(new AddExpression(left, right));
				break;
			case '-':
				// 将减法运算加入到栈中
				left = stack.pop();
				right = new VarExpression(String.valueOf(charArray[++i]));
				stack.push(new SubExpression(left, right));
				break;
			default:
				// 如果不是运算符，那么就是终结表达式
				stack.push(new VarExpression(String.valueOf(charArray[i])));
			}
		}
		// 把最终栈的顶层抛出，它即是最后封装的非终结表达式
		this.expression = stack.pop();
	}
	
	// 将键值对输入给表达式运算
	public int run(HashMap&lt;String, Integer&gt; var)
	{
		return expression.interpreter(var);
	}
}
</pre>
 
<pre name="code" class="java">package _21InterpretePattern;

import java.util.HashMap;

/**
 * 场景类
 */
public class Client {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		String expStr = "a+b-c+d";
		HashMap&lt;String, Integer&gt; var = new HashMap&lt;String, Integer&gt;();
		var.put("a", 1);
		var.put("b", 2);
		var.put("c", 2);
		var.put("d", 4);
		
		Context context = new Context();
		// 先解析运算表达式
		context.analyse(expStr);
		// 进行运算
		System.out.println(context.run(var));
	}

}
</pre>
<p> </p>
<p>3.解释器模式的四个角色</p>
<ul>
<li>AbstractExpression抽象解释器：声明一个所有具体表达式都要实现的抽象接口（或者抽象类），接口中主要是一个interpreter()方法，称为解释操作。具体解释任务由它的各个实现类来完成，具体的解释器分别由终结符解释器TerminalExpression和非终结符解释器NonterminalExpression完成。</li>
<li>TerminalExpression终结符表达式：实现与文法中的元素相关联的解释操作，通常一个解释器模式中只有一个终结符表达式，但有多个实例，对应不同的终结符。终结符一半是文法中的运算单元，比如有一个简单的公式R=R1+R2，在里面R1和R2就是终结符，对应的解析R1和R2的解释器就是终结符表达式。</li>
<li>NonterminalExpression非终结符表达式：文法中的每条规则对应于一个非终结符表达式，非终结符表达式一般是文法中的运算符或者其他关键字，比如公式R=R1+R2中，+就是非终结符，解析+的解释器就是一个非终结符表达式。非终结符表达式根据逻辑的复杂程度而增加，原则上每个文法规则都对应一个非终结符表达式。</li>
<li>Context环境角色：这个角色的任务一般是用来存放文法中各个终结符所对应的具体值，比如R=R1+R2，我们给R1赋值100，给R2赋值200。这些信息需要存放到环境角色中，很多情况下我们使用Map来充当环境角色就足够了。</li>
</ul>
<p><img height="309" width="583" alt="" src="http://dl.iteye.com/upload/picture/pic/120586/027a0e98-f4aa-37a0-9397-2c1970bfa7b4.jpg"></p>
<p> </p>
<p>4.解释器模式的优点</p>
<p style="padding-left: 30px;">解释器是一个简单的语法分析工具，它最显著的优点就是扩展性，修改语法规则只需要修改相应的非终结符就可以了，若扩展语法，只需要增加非终结符类就可以了。</p>
<p style="padding-left: 30px;"> </p>
<p>5.解释器模式的缺点</p>
<ul>
<li>解释器模式会引起类的膨胀：每个语法都需要产生一个非终结符表达式，语法规则比较复杂时，就可能产生大量的类文件，为维护带来非常多的麻烦。</li>
<li>解释器模式采用递归调用方法：每个非终结符表达式只关心与自己相关的表达式，每个表达式需要知道最终的结果，必须通过一层一层的剥茧，无论是面向对象的语言还是面向过程的语言，递归都是一个不推荐的方式（只在必要条件下使用），它将导致调试非常复杂。想想看，如果要排查一个错误，我们是不是要一个个断点调试下去，直至最小的语法单元。</li>
<li>解释器模式使用了大量的循环和递归：效率是一个不容忽视的问题。特别是用于解释一个解析复杂、冗长的语法时，效率是难以忍受的。</li>
</ul>
<p>6.解释器模式的注意事项</p>
<p style="padding-left: 30px;"><span style="color: #ff0000;">尽量不要在重要模块中使用解释器模式，否则维护会是一个很大的问题。在项目中可以使用shell、JRuby、Groovy等脚本语言来代替解释器模式、弥补Java编译型语言的不足。我们在一个银行的分析型项目中就采用了JRuby进行运算处理，避免使用解释器模式的四则运算，效率和性能各方面表现良好。<br><br>
解释器模式在实际的系统开发中使用的非常少，因为它会引起效率、性能以及维护等问题，一般在大中型的框架型项目中能找到它的身影，如一些数据分析工具、报表设计工具、科学计算工具等，如果你确实遇到“一种特定类型的问题发生的频率足够高”的情况，准备使用解释器模式时，可以考虑一下<span style="color: #0000ff;">Expression4J、MESP、Jep</span>
等开源的解析工具包，功能都非常强大，而且非常容易使用，效率也不错，实现大多数的数学运算完全没有问题，自己没有必要重头开始编写解释器。</span></p>
  </div>

  


  
  
  <div id="bottoms" class="clearfix">
    
    <div id="share_weibo">分享到：
      <a data-type='sina' href="javascript:;" title="分享到新浪微博"><img src="/images/sina.jpg"></a>
      <a data-type='qq' href="javascript:;" title="分享到腾讯微博"><img src="/images/tec.jpg"></a>
    </div>
  </div>

  <div class="blog_nav">
    <div class="pre_next">
      <a href="/blog/1735369" class="next" title="22.享元模式（Flyweight Pattern）">22.享元模式（Flyweight Pattern）</a>
      |
      <a href="/blog/1733230" class="pre" title="20.状态模式（State Pattern）">20.状态模式（State Pattern）</a>
    </div>
  </div>
  <div class="blog_bottom">
    <ul>
      <li>2012-11-23 14:29</li>
      <li>浏览 499</li>
      <li><a href="#comments">评论(0)</a></li>
      
      
      <li>分类:<a href="http://www.iteye.com/blogs/category/other">非技术</a></li>      
      <li class='last'><a href="http://www.iteye.com/wiki/blog/1733971" target="_blank" class="more">相关推荐</a></li>
    </ul>
  </div>

  <div class="blog_comment">
    <h5>评论</h5>
    <a id="comments" name="comments"></a>
    
    
    
  </div>

  <div class="blog_comment">
    <h5>发表评论</h5>
            <p style="text-align:center; margin-top:30px;margin-bottom:0px;"><a href="/login" style="background-color:white;"> <img src="/images/login_icon.png" style="vertical-align:middle; margin-right: 10px;" /></a><a href="/login">  您还没有登录,请您登录后再发表评论 </a></p>
      </div>
</div>


<script type="text/javascript">
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  $$('#main .blog_content pre[name=code]').each(function(pre, index){ // blog content
    var post_id = 1733971;
    var location = window.location;
    source_url = location.protocol + "//" + location.host + location.pathname + location.search;
    pre.writeAttribute('codeable_id', post_id);
    pre.writeAttribute('codeable_type', "Blog");
    pre.writeAttribute('source_url', source_url);
    pre.writeAttribute('pre_index', index);
    pre.writeAttribute('title', '21.解析器模式（Interpreter Pattern）');
  });

  fix_image_size($$('div.blog_content img'), 700);

  function processComment() {
    $$('#main .blog_comment > div').each(function(comment){// comment
      var post_id = comment.id.substr(2);
      $$("#"+comment.id+" pre[name=code]").each(function(pre, index){
        var location = window.location;
        source_url = location.protocol + "//" + location.host + location.pathname + location.search;
        source_url += "#" + comment.id;
        pre.writeAttribute('codeable_id', post_id);
        pre.writeAttribute('codeable_type', "BlogComment");
        pre.writeAttribute('source_url', source_url);
        pre.writeAttribute('pre_index', index);
        pre.writeAttribute('title', '21.解析器模式（Interpreter Pattern）');
      });
    });
  }

  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'BlogComment'},
      onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);
        Element.scrollTo(editor.bbcode_editor.textarea.element);}
    });
  }

  code_favorites_init();
  processComment();
  new WeiboShare({share_buttons: $('share_weibo'), img_scope: $('blog_content')});
</script>




        </div>

        <div id="local">
          <div class="local_top"></div>
          <div id="blog_owner">
  <div id="blog_owner_logo"><a href='http://wangwengcn.iteye.com'><img alt="wangwengcn的博客" class="logo" src="http://www.iteye.com/images/user-logo.gif?1324994303" title="wangwengcn的博客: Bruce-水桶妖" width="" /></a></div>
  <div id="blog_owner_name">wangwengcn</div>
</div>

          <div id="blog_actions">
            <ul>
              <li>浏览: 22870 次</li>
              <li>性别: <img alt="Icon_minigender_1" src="http://www.iteye.com/images/icon_minigender_1.gif?1324994303" title="男" /></li>
              <li>来自: 杭州</li>
              <li><img src='/images/status/offline.gif'/></li>
              
            </ul>
          </div>
          <div id="user_visits" class="clearfix">
            <h5>最近访客 <span style='font-weight:normal;font-size:12px;padding-left:30px;'><a href="/blog/user_visits">更多访客&gt;&gt;</a></span></h5>
            
              <div class="user_visit">
                <div class="logo"><a href='http://litoupu.iteye.com' target='_blank'><img alt="litoupu的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1324994303" title="litoupu的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://litoupu.iteye.com' target='_blank' title='litoupu'>litoupu</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://mjg-jazz.iteye.com' target='_blank'><img alt="mjg_jazz的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1324994303" title="mjg_jazz的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://mjg-jazz.iteye.com' target='_blank' title='mjg_jazz'>mjg_jazz</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://dylinshi126.iteye.com' target='_blank'><img alt="dylinshi126的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1324994303" title="dylinshi126的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://dylinshi126.iteye.com' target='_blank' title='dylinshi126'>dylinshi126</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://vipandace.iteye.com' target='_blank'><img alt="vipandace的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1324994303" title="vipandace的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://vipandace.iteye.com' target='_blank' title='vipandace'>vipandace</a></div>
              </div>
            
          </div>

          

                      <div id="blog_menu">
              <h5>文章分类</h5>
              <ul>
                <li><a href="/">全部博客 (57)</a></li>
                
                  <li><a href="/category/237802">Apache (1)</a></li>
                
                  <li><a href="/category/254970">Cloud (1)</a></li>
                
                  <li><a href="/category/274415">Concurrent (3)</a></li>
                
                  <li><a href="/category/280204">CXF (4)</a></li>
                
                  <li><a href="/category/251011">DesignPattern (24)</a></li>
                
                  <li><a href="/category/233895">Eclipse (2)</a></li>
                
                  <li><a href="/category/237737">Flex (1)</a></li>
                
                  <li><a href="/category/248194">Hibernate (1)</a></li>
                
                  <li><a href="/category/232856">Https (1)</a></li>
                
                  <li><a href="/category/245771">J2EE (2)</a></li>
                
                  <li><a href="/category/232853">Java (3)</a></li>
                
                  <li><a href="/category/236765">JVM (11)</a></li>
                
                  <li><a href="/category/247398">SpringMVC (3)</a></li>
                
                  <li><a href="/category/232854">Webservice (1)</a></li>
                
              </ul>
            </div>
            <div id='month_blogs'>
              <h5>社区版块</h5>
              <ul>
                <li><a href="/blog/news">我的资讯</a> (0)</li>
                <li>
                  <a href="/blog/post">我的论坛</a> (0)
                </li>
                <li><a href="/blog/answered_problems">我的问答</a> (0)</li>
              </ul>
            </div>
            <div id="month_blogs">
              <h5>存档分类</h5>
              <ul>
                
                  <li><a href="/blog/monthblog/2014-05">2014-05</a> (1)</li>
                
                  <li><a href="/blog/monthblog/2013-06">2013-06</a> (1)</li>
                
                  <li><a href="/blog/monthblog/2013-05">2013-05</a> (3)</li>
                
                <li><a href="/blog/monthblog_more">更多存档...</a></li>
              </ul>
            </div>
            
            

            <div id="guest_books">
              <h5>最新评论</h5>
              <ul>
                
                <li>
                  <a href='http://xujialei2007.iteye.com' target='_blank' title='xujialei2007'>xujialei2007</a>： 
                    &lt;!--APR library loader. Do ...<br />
                  <a href="/blog/1881535#bc2334415">4.CXF安全访问之单向SSL或者双向SSL（三）</a>
                </li>
                
                <li>
                  <a href='http://sthyuhao.iteye.com' target='_blank' title='sthyuhao'>sthyuhao</a>： 
                  javax.net.ssl.SSLHandshakeExcep ...<br />
                  <a href="/blog/1881535#bc2318337">4.CXF安全访问之单向SSL或者双向SSL（三）</a>
                </li>
                
              </ul>
            </div>

            <div class="local_bottom"></div>
          
        </div>
      </div>

      <div id="footer" class="clearfix">
        <div id="copyright">
          <hr/>
          声明：ITeye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。<br />
          &copy; 2003-2014 ITeye.com.   All rights reserved.  [ 京ICP证110151号  京公网安备110105010620 ]
        </div>
      </div>
    </div>
    <script type="text/javascript">
  document.write("<img src='http://stat.iteye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&user_id=' width='0' height='0' />");
</script>

<script src="http://csdnimg.cn/pubfooter/js/tracking.js?version=20130923164150" type="text/javascript"></script>

    
    
  </body>
</html>
